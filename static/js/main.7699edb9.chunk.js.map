{"version":3,"sources":["components/Start.jsx","components/Header.jsx","components/Persons.jsx","components/Planets.jsx","components/FavoritePersons.jsx","components/FavoritePlanets.jsx","components/AllFavorites.jsx","App.js","serviceWorker.js","index.js"],"names":["Start","className","Header","setScreenFromHeader","onClick","Persons","props","useState","filter","setFilter","listWithPersons","items","item","name","toLowerCase","includes","gender","birth_year","map","person","id","key","addToFavorites","addFavorite","toFavorite","type","placeholder","onKeyUp","event","target","value","Planets","listWithplanets","diameter","population","planet","FavoritePersons","FavoritePlanets","AllFavorites","setName","setGender","setBirthYear","newItem","favoritesList","content","concat","favorites","length","onChange","e","charAt","toUpperCase","slice","App","currentScreen","setCurrentScreen","setFavorites","persons","setPersons","planets","setPlanets","useEffect","listPersons","getData","url","fetch","then","res","json","response","a","next","results","forEach","push","listPlanets","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7699edb9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Start = () => (\r\n\t<div className=\"start-box\">\r\n\t<section className=\"star-wars\">\r\n\t<div className=\"crawl\">\r\n\t<div className=\"title\">\r\n\t<p>\r\n\tEpisode REACT.JS\r\n\t</p>\r\n\t<h1>\r\n\tA New Hope\r\n\t</h1>\r\n\t</div>\r\n\t<p>\r\n\tSearch for persons or planets from the Star-Wars universe!\r\n\t</p>\r\n\t<p>\r\n\tAdd them to your favoritelist or create your own favorite planets and\r\n\tcharacters.\r\n\t</p>\r\n\t</div>\r\n    </section>\r\n\t</div>\r\n);\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Header = ({ setScreenFromHeader }) =>\r\n{\r\n\treturn (\r\n\t\t<div className=\"header-box\">\r\n\t\t<div className=\"logo-box\">\r\n        <h3\r\n\t\tclassName=\"header-text\"\r\n\t\tonClick={() => setScreenFromHeader(\"Start\")}\r\n        >\r\n\t\tS T A R  W A R S  A P I\r\n\t\t</h3>\r\n\t\t</div>\r\n\t\t<div className=\"line-header-top\">\r\n\t\t</div>\r\n\t\t<div className=\"start-btm-box\">\r\n\t\t<button\r\n\t\tclassName=\"btm-persons\"\r\n\t\tonClick={() => setScreenFromHeader(\"Persons\")}\r\n        >\r\n\t\tPERSONS\r\n\t\t</button>\r\n\t\t<button\r\n\t\tclassName=\"btm-planets\"\r\n\t\tonClick={() => setScreenFromHeader(\"Planets\")}\r\n        >\r\n\t\tPLANETS\r\n\t\t</button>\r\n\t\t<li className=\"dropdown\">\r\n\t\t<button className=\"btm-favorites\">\r\n\t\tFAVORITES\r\n\t\t</button>\r\n\t\t<div className=\"dropdown-content\">\r\n\t\t<div onClick={() => setScreenFromHeader(\"FavoritePersons\")}>\r\n\t\tPersons\r\n\t\t</div>\r\n\t\t<div onClick={() => setScreenFromHeader(\"FavoritePlanets\")}>\r\n\t\tPlanets\r\n\t\t</div>\r\n\t\t<div onClick={() => setScreenFromHeader(\"AllFavorites\")}>\r\n\t\tAll favorites\r\n\t\t</div>\r\n\t\t</div>\r\n        </li>\r\n\t\t</div>\r\n\t\t<div className=\"line-header-bottom\">\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Persons = (props) =>\r\n{\r\n\tconst [filter, setFilter] = useState(\"\");\r\n\tfunction toSearch(event)\r\n\t{\r\n\t\tsetFilter(event.target.value);\r\n\t}\r\n\r\n\tconst toFavorite = (person) =>\r\n\t{\r\n\t\tlet addToFavorites = {\r\n\t\t\tname: person.name,\r\n\t\t\tgender: person.gender,\r\n\t\t\tbirth_year: person.birth_year,\r\n\t\t};\r\n\r\n\t\tprops.addFavorite(addToFavorites);\r\n\t};\r\n\r\n\tlet listWithPersons = props.items\r\n\t.filter((item) =>\r\n\t{\r\n\t\treturn (\r\n\t\t\titem.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n\t\t\titem.gender.toLowerCase().includes(filter.toLowerCase()) ||\r\n\t\t\titem.birth_year.toLowerCase().includes(filter.toLowerCase())\r\n\t\t);\r\n\t})\r\n\t.map((person, id) => (\r\n\t\t<div key={id} className=\"card-box\">\r\n\t\t<div className=\"card-text\">\r\n\t\t<div className=\"card-title\">\r\n\t\t<h3>\r\n\t\t{person.name}\r\n\t\t</h3>\r\n\t\t</div>\r\n\t\t<div className=\"card-info\">\r\n\t\t<p>\r\n\t\t<span>\r\n\t\tGender:\r\n\t\t</span>\r\n\t\t{person.gender}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t<span>\r\n\t\tBirth date:\r\n\t\t</span>\r\n\t\t{person.birth_year}\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<button className=\"card-btm\" onClick={() => toFavorite(person)}>\r\n\t\tAdd to favorites\r\n\t\t</button>\r\n\t\t</div>\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t<div className=\"persons-box\">\r\n\t\t<input\r\n\t\tclassName=\"input-search\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Search\"\r\n\t\tonKeyUp={toSearch}\r\n\t\t/>\r\n\t\t<div className=\"card-raid\">\r\n\t\t{listWithPersons}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Persons;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Planets = (props) =>\r\n{\r\n\tconst [filter, setFilter] = useState(\"\");\r\n\tfunction toSearch(event)\r\n\t{\r\n\t\tsetFilter(event.target.value);\r\n\t}\r\n\r\n\tconst toFavorite = (planet) =>\r\n\t{\r\n\t\tlet addToFavorites = {\r\n\t\t\tname: planet.name,\r\n\t\t\tdiameter: planet.diameter,\r\n\t\t\tpopulation: planet.population,\r\n\t\t};\r\n\t\tprops.addFavorite(addToFavorites);\r\n\t};\r\n\r\n\tlet listWithplanets = props.items\r\n\t.filter((item) =>\r\n\t{\r\n\t\treturn (\r\n\t\t\titem.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n\t\t\titem.diameter.toLowerCase().includes(filter.toLowerCase()) ||\r\n\t\t\titem.population.toLowerCase().includes(filter.toLowerCase())\r\n\t\t);\r\n\t})\r\n\t.map((planet, id) => (\r\n\t\t<div key={id} className=\"card-box\">\r\n        <div className=\"card-text\">\r\n\t\t<div className=\"card-title\">\r\n\t\t<h3>\r\n\t\t{planet.name}\r\n\t\t</h3>\r\n\t\t</div>\r\n\t\t<div className=\"card-info\">\r\n\t\t<p>\r\n\t\t<span>\r\n\t\tDiameter:\r\n\t\t</span>\r\n\t\t{planet.diameter}\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t<span>\r\n\t\tPopulation:\r\n\t\t</span>\r\n\t\t{planet.population}\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<button className=\"card-btm\" onClick={() => toFavorite(planet)}>\r\n\t\tAdd to favorites\r\n\t\t</button>\r\n\t\t</div>\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t<div className=\"planets-box\">\r\n\t\t<input\r\n\t\tclassName=\"input-search\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Search\"\r\n\t\tonKeyUp={toSearch}\r\n\t\t/>\r\n\t\t<div className=\"card-raid\">\r\n\t\t{listWithplanets}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Planets;\r\n","import React from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst FavoritePersons = () => (\r\n\t<div className=\"persons-box\">\r\n\t<div className=\"card-raid\">\r\n\t<div className=\"no-favorites\">\r\n\tUnder construction\r\n\t</div>\r\n    </div>\r\n\t</div>\r\n);\r\n\r\nexport default FavoritePersons;\r\n","import React from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst FavoritePlanets = () => (\r\n\t<div className=\"persons-box\">\r\n\t<div className=\"card-raid\">\r\n\t<div className=\"no-favorites\">\r\n\tUnder construction\r\n\t</div>\r\n\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default FavoritePlanets;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst AllFavorites = (props) =>\r\n{\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [gender, setGender] = useState(\"\");\r\n\tconst [birth_year, setBirthYear] = useState(\"\");\r\n\r\n\tconst toAdd = () =>\r\n\t{\r\n\t\tprops.addFavorite(newItem);\r\n\t};\r\n\r\n\tlet newItem = {\r\n\t\tname: name,\r\n\t\tgender: gender,\r\n\t\tbirth_year: birth_year,\r\n\t};\r\n\r\n\tconst [filter, setFilter] = useState(\"\");\r\n\tfunction toSearch(event)\r\n\t{\r\n\t\tsetFilter(event.target.value);\r\n\t}\r\n\r\n\tlet favoritesList = [];\r\n\tfavoritesList = favoritesList.concat(props.favorites);\r\n\r\n\tlet content = null;\r\n\tif (favoritesList.length < 1)\r\n\t{\r\n\t\tcontent = <h3 className=\"no-favorites\">No favorites</h3>;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcontent = favoritesList\r\n\t\t.filter((item) =>\r\n\t\t{\r\n\t\t\treturn item.name.toLowerCase().includes(filter.toLowerCase());\r\n\t\t})\r\n\t\t.map((item, id) => (\r\n\t\t\t<div key={id} className=\"card-box\">\r\n\t\t\t<div className=\"card-text\">\r\n\t\t\t<div className=\"card-title\">\r\n\t\t\t<h3>\r\n\t\t\t{item.name}\r\n\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-info\">\r\n\t\t\t<div>\r\n\t\t\t<span>\r\n\t\t\tGender:\r\n\t\t\t</span>\r\n\t\t\t{item.gender}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t<span>\r\n\t\t\tBirth date:\r\n\t\t\t</span>\r\n\t\t\t{item.birth_year}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t<div className=\"persons-box\">\r\n\t\t<div className=\"duplo\">\r\n\t\t{\" \"}\r\n\t\t<input\r\n\t\tclassName=\"input-search-add\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Search\"\r\n\t\tonKeyUp={toSearch}\r\n\t\t/>\r\n\t\t<div className=\"card-box-add\">\r\n\t\t<div className=\"card-text-add\">\r\n\t\t<input\r\n\t\tclassName=\"card-title-add\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Name\"\r\n\t\tvalue={name}\r\n\t\tonChange={(e) =>\r\n\t\t\tsetName(\r\n\t\t\t\te.target.value.charAt(0).toUpperCase() +\r\n\t\t\t\te.target.value.slice(1)\r\n\t\t\t)\r\n\t\t}\r\n\t\tonClick={() => setName(\"\")}\r\n\t\t/>\r\n\t\t<div className=\"card-info-add\">\r\n\t\t<input\r\n\t\tclassName=\"card-info-add-1\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Birth\"\r\n\t\tvalue={birth_year}\r\n\t\tonChange={(e) =>\r\n\t\t\tsetBirthYear(\r\n\t\t\t\te.target.value.charAt(0).toUpperCase() +\r\n\t\t\t\te.target.value.slice(1)\r\n\t\t\t)\r\n\t\t}\r\n\t\tonClick={() => setBirthYear(\"\")}\r\n\t\t/>\r\n\t\t<input\r\n\t\tclassName=\"card-info-add-2\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Gender\"\r\n\t\tvalue={gender}\r\n\t\tonChange={(e) =>\r\n\t\t\tsetGender(\r\n\t\t\t\te.target.value.charAt(0).toUpperCase() +\r\n\t\t\t\te.target.value.slice(1)\r\n\t\t\t)\r\n\t\t}\r\n\t\tonClick={() => setGender(\"\")}\r\n\t\t/>\r\n\t\t<button className=\"card-btm-add\" onClick={toAdd}>\r\n\t\tAdd character\r\n\t\t</button>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"card-raid-add\">\r\n\t\t{content}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AllFavorites;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nimport Start from \"./components/Start\";\nimport Header from \"./components/Header\";\nimport Persons from \"./components/Persons\";\nimport Planets from \"./components/Planets\";\nimport FavoritePersons from \"./components/FavoritePersons\";\nimport FavoritePlanets from \"./components/FavoritePlanets\";\nimport AllFavorites from \"./components/AllFavorites.jsx\";\n\nfunction App() {\n\tconst START = \"Start\",\n\tHEADER = \"Header\",\n\tPERSONS = \"Persons\",\n\tPLANETS = \"Planets\",\n\tFAVORITE_PERSONS = \"FavoritePersons\",\n\tFAVORITE_PLANETS = \"FavoritePlanets\",\n\tALL_FAVORITES = \"AllFavorites\";\n\n\tconst [currentScreen, setCurrentScreen] = useState(START);\n\tconst [favorites, setFavorites] = useState([]);\n\tconst [persons, setPersons] = useState([]);\n\tconst [planets, setPlanets] = useState([]);\n\n\tconst addFavorite = (items) =>\n\t{\n\t\tsetFavorites([...favorites, items]);\n\t};\n\n\tlet content = null;\n\tswitch (currentScreen)\n\t{\n\t\tcase START:\n\t\tcontent = <Start />;\n\t\tbreak;\n\t\tcase HEADER:\n\t\tcontent = <Header />;\n\t\tbreak;\n\t\tcase PERSONS:\n\t\tcontent = (\n\t\t\t<Persons\n\t\t\titems={persons}\n\t\t\tsetPersons={setPersons}\n\t\t\taddFavorite={addFavorite}\n\t\t\t/>\n\t\t);\n\t\tbreak;\n\t\tcase PLANETS:\n\t\tcontent = (\n\t\t\t<Planets\n\t\t\titems={planets}\n\t\t\tsetPlanets={setPlanets}\n\t\t\taddFavorite={addFavorite}\n\t\t\t/>\n\t\t);\n\t\tbreak;\n\t\tcase FAVORITE_PERSONS:\n\t\tcontent = <FavoritePersons />;\n\t\tbreak;\n\t\tcase FAVORITE_PLANETS:\n\t\tcontent = <FavoritePlanets />;\n\t\tbreak;\n\t\tcase ALL_FAVORITES:\n\t\tcontent = (\n\t\t\t<AllFavorites\n\t\t\tfavorites={favorites}\n\t\t\tsetFavorites={setFavorites}\n\t\t\taddFavorite={addFavorite}\n\t\t\t/>\n\t\t);\n\t\tbreak;\n\t\tdefault:\n\t\tcontent = <Start />;\n\t}\n\n\tuseEffect(() =>\n\t{\n\t\tlet listPersons = [];\n\n\t\tfunction getData(url)\n\t\t{\n\t\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (response) =>\n\t\t\t{\n\t\t\t\tlet next = response.next;\n\n\t\t\t\tif (next !== null)\n\t\t\t\t{\n\t\t\t\t\tawait getData(next);\n\t\t\t\t\tresponse.results.forEach((persons) => listPersons.push(persons));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsetPersons(listPersons);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tgetData(\"https://swapi.dev/api/people/\");\n\t}, []);\n\n\tuseEffect(() =>\n\t{\n\t\tlet listPlanets = [];\n\n\t\tfunction getData(url)\n\t\t{\n\t\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (response) =>\n\t\t\t{\n\t\t\t\tlet next = response.next;\n\n\t\t\t\tif (next !== null)\n\t\t\t\t{\n\t\t\t\t\tawait getData(next);\n\t\t\t\t\tresponse.results.forEach((planets) => listPlanets.push(planets));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsetPlanets(listPlanets);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tgetData(\"https://swapi.dev/api/planets\");\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t<header>\n\t\t<Header setScreenFromHeader={setCurrentScreen} />\n\t\t</header>\n\t\t<main>\n\t\t{content}\n\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}